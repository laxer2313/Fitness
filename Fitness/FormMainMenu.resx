<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>